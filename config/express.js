const config = require('./config');
const express = require('express');
const morgan = require('morgan');
const compress = require('compression');
const bodyParser = require('body-parser');
const methodOverride = require('method-override');
const path = require('path');

module.exports = function() {
  const app = express();

  if (process.env.NODE_ENV === 'development') {
    app.use(morgan('dev'));
  }
  else if (process.env.NODE_ENV === 'production') {
    app.use(compress());
  }

  app.use(bodyParser.urlencoded({
    extended: true
  }));
  app.use(bodyParser.json());
  app.use(methodOverride());

  app.set('views', './app/views');
  app.set('view engine', 'ejs');

  require('../app/routes/rooms.routes').routes(app);
  require('../app/routes/messages.routes').routes(app);
  require('../app/routes/users.routes').routes(app);

  app.use(express.static(path.join('public')));
  app.use(express.static(path.join('client', 'dist')));

  // Catch-all middleware, in case the request string was generated by Angular Router.
  app.get('/*', function (req, res) {
    res.sendFile(path.join(__dirname, '..', 'client', 'dist', 'index.html'));
  });

  // catch 404 and forward to error handler
  app.use(function(req, res, next) {
    let err = new Error('Not Found');
    err.status = 404;
    next(err);
  });

  return app;
};
